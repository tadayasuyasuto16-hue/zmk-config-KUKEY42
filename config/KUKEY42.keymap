#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        L2+hankaku {
            bindings = <&lt 2 LA(GRAVE)>;
            key-positions = <39>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        PW: PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(W) &kp S &kp POUND &kp N2 &kp N0 &kp N2 &kp N0 &kp N0 &kp N5 &kp N0 &kp N7>;
            label = "PW";
        };

        kakko_1: kakko_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(GRAVE) &kp LPAR &kp RPAR &kp LEFT>,
                <&macro_press>;

            label = "KAKKO_1";
        };

        kakko_2: kakko_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "KAKKO_2";
        };

        kakko_3: kakko_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET) &kp LEFT>;
            label = "KAKKO_3";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tapdance_kana: tapdance_kana {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_KANA";
            #binding-cells = <0>;
            bindings = <&kp INT2>, <&kp LANGUAGE_2>, <&sl 1>;

            tapping-term-ms = <400>;
        };

        WheelScroll: WheelScroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "WHEELSCROLL";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };

        L2_hankaku: L2_hankaku {
            compatible = "zmk,behavior-tap-dance";
            label = "L2_HANKAKU";
            #binding-cells = <0>;
            bindings = <&lt 2 LA(GRAVE)>, <&tog 2>;
        };

        L3_kana: L3_kana {
            compatible = "zmk,behavior-tap-dance";
            label = "L3_KANA";
            #binding-cells = <0>;
            bindings = <&lt 3 INT_KANA>, <&tog 3>;
        };

        L1_henkan: L1_henkan {
            compatible = "zmk,behavior-tap-dance";
            label = "L1_HENKAN";
            #binding-cells = <0>;
            bindings = <&lt 1 INT_HENKAN>, <&tog 1>;
        };

        P_PW: P_PW {
            compatible = "zmk,behavior-tap-dance";
            label = "P_PW";
            #binding-cells = <0>;
            bindings = <&kp P>, <&PW>;

            tapping-term-ms = <175>;
        };

        q_ctrl_alt_del: q_ctrl_alt_del {
            compatible = "zmk,behavior-tap-dance";
            label = "Q_CTRL_ALT_DEL";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&mt Q LC(LA(DELETE))>;

            tapping-term-ms = <175>;
        };

        cs_left_c_left: cs_left_c_left {
            compatible = "zmk,behavior-tap-dance";
            label = "CS_LEFT_C_LEFT";
            #binding-cells = <0>;
            bindings =
                <&mt LS(LC(LEFT)) LS(LC(LEFT))>,
                <&mt LC(LEFT) LC(LEFT_ARROW)>;

            tapping-term-ms = <175>;
        };

        cs_up_c_up: cs_up_c_up {
            compatible = "zmk,behavior-tap-dance";
            label = "CS_UP_C_UP";
            #binding-cells = <0>;
            bindings =
                <&mt LS(LC(UP_ARROW)) LS(LC(UP_ARROW))>,
                <&mt LC(LEFT) LC(LEFT_ARROW)>;

            tapping-term-ms = <175>;
        };

        cs_down_c_down: cs_down_c_down {
            compatible = "zmk,behavior-tap-dance";
            label = "CS_DOWN_C_DOWN";
            #binding-cells = <0>;
            bindings = <&mt LS(LC(DOWN)) LS(LC(DOWN))>, <&mt LC(DOWN) LC(DOWN)>;

            tapping-term-ms = <175>;
        };

        cs_right_c_right: cs_right_c_right {
            compatible = "zmk,behavior-tap-dance";
            label = "CS_RIGHT_C_RIGHT";
            #binding-cells = <0>;
            bindings =
                <&mt LS(LC(RIGHT)) LS(LC(RIGHT))>,
                <&mt LC(RIGHT) LC(RIGHT)>;

            tapping-term-ms = <175>;
        };

        L1_space: L1_space {
            compatible = "zmk,behavior-tap-dance";
            label = "L1_SPACE";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&tog 1>;

            tapping-term-ms = <175>;
        };

        Layer_tap: Layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&q_ctrl_alt_del             &kp W               &kp E                &kp R        &kp T                                     &kp Y        &kp U        &kp I           &kp O        &P_PW
&kp A                       &mt LCTRL S         &mt LEFT_ALT D       &mt LSHFT F  &kp G      &kp BACKSPACE      &kp DELETE  &kp H        &mt LSHFT J  &mt LEFT_ALT K  &mt LCTRL L  &kp BACKSPACE
&kp Z                       &kp X               &kp C                &kp V        &kp B      &kp LC(Z)          &kp TAB     &kp N        &kp M        &mkp LCLK       &mkp RCLK    &kp UNDERSCORE
&mt INTERNATIONAL_4 ESCAPE  &Layer_tap 0 COMMA  &Layer_tap 0 PERIOD  &to 0        &L1_space  &L2_hankaku        &L3_kana    &lt 3 ENTER                                            &mt LEFT_GUI ENTER
            >;

            sensor-bindings = <&WheelScroll SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE                            &kakko_2  &cs_left_c_left  &cs_up_c_up   &cs_down_c_down  &cs_right_c_right
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &trans  &kakko_1  &kp LEFT         &kp UP_ARROW  &kp DOWN_ARROW   &kp RIGHT
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &mo 6       &trans  &kakko_3  &msc SCRL_LEFT   &msc SCRL_UP  &msc SCRL_DOWN   &msc SCRL_RIGHT
&trans  &trans  &trans  &trans                &trans                 &mo 1       &trans  &trans                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp F1            &kp F2   &kp F3                &kp F4                &kp F5                                                &kp ASTERISK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE
&kp F6            &kp F7   &kp F8                &kp F9                &kp F10            &trans               &trans        &kp KP_PLUS   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS
&kp F11           &kp F12  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP      &kp KP_EQUAL  &kp KP_N0     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT
&mt C INT_HENKAN  &trans   &trans                &trans                &trans             &trans               &trans        &trans                                                           &trans
            >;
        };

        ARROW {
            bindings = <
&kp AMPERSAND        &kp AT_SIGN       &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LS(INTERNATIONAL_3)                                 &kp UNDER      &kp LC(KP_PLUS)  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp PLUS
&kp MINUS            &kp LEFT_BRACKET  &kp EXCLAMATION    &kp QUESTION   &kp INT_YEN               &trans                &to 4   &kp PAGE_UP    &kp LC(MINUS)    &kp UP_ARROW    &kp CARET             &trans
&mt LEFT_SHIFT HASH  &kp PERCENT       &kp SINGLE_QUOTE   &kp SEMICOLON  &kp EQUAL                 &trans                &trans  &kp PAGE_DOWN  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp LS(INTERNATIONAL_1)
&trans               &trans            &trans             &trans         &mt LEFT_SHIFT LS(SPACE)  &lt 1 LANGUAGE_2      &trans  &trans                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_MINUS) LC(KP_PLUS)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &to 0   &trans  &mkp MB1  &mo 5   &mkp MB2  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &bootloader
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans       &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &sys_reset   &trans        &trans        &trans        &trans        &trans
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&bootloader  &sys_reset    &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
